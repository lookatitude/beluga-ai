# beluga-ai Development Guidelines

Auto-generated from all feature plans. Last updated: 2025-10-05

## Constitutional Requirements (MANDATORY)
**ALL development MUST comply with Constitution v1.0.0**

### Package Structure (ENFORCED)
- REQUIRED: iface/, config.go, metrics.go, errors.go, test_utils.go, advanced_test.go
- MUST: Follow ISP (small interfaces), DIP (dependency injection), SRP (single responsibility)
- MUST: Use global registry pattern for multi-provider packages
- MUST: Implement OTEL metrics (NO custom metrics)
- MUST: Op/Err/Code error handling pattern

### Testing Standards (NON-NEGOTIABLE)  
- MUST: 100% test coverage with advanced mocks
- MUST: Table-driven tests, concurrency tests, benchmarks
- MUST: Integration tests for cross-package interactions

## Active Technologies
- Go 1.21+ + OpenTelemetry (go.opentelemetry.io/otel), testify (github.com/stretchr/testify), validator (github.com/go-playground/validator) (001-for-the-core)
- Go 1.24.0 + go-playground/validator/v10, go.opentelemetry.io/otel (metric/trace), github.com/stretchr/testify (mock/assert) (002-for-the-schema)
- N/A (schema/data structures package) (002-for-the-schema)
- Go 1.21+ + Viper, OpenTelemetry, testify, validator, mapstructure (003-for-the-config)
- Configuration files (YAML/JSON/TOML), environment variables (003-for-the-config)
- Go 1.21+ (existing Beluga AI Framework requirement) + OpenTelemetry, testify/mock, providers (OpenAI SDK, Anthropic SDK, AWS Bedrock SDK, Ollama client) (004-for-the-llms)
- N/A (LLM provider APIs - no persistent storage required) (004-for-the-llms)
- Go 1.21+ (existing Beluga AI Framework requirement) + OpenTelemetry (metrics, tracing, logging), testify/mock (testing), existing ChatModel providers (OpenAI) (005-for-the-chatmodels)
- N/A (chat model provider APIs - no persistent storage required) (005-for-the-chatmodels)
- Go 1.21+ (existing Beluga AI Framework requirement) + Viper (spf13/viper), OpenTelemetry (go.opentelemetry.io/otel), testify (github.com/stretchr/testify), validator (go-playground/validator), schema package integration (006-for-the-config)
- Configuration files (YAML, JSON, TOML), environment variables, no persistent storage required (006-for-the-config)
- Go 1.21+ + go.opentelemetry.io/otel, github.com/go-playground/validator/v10, github.com/sashabaranov/go-openai, github.com/ollama/ollama/api (008-for-the-embeddings)
- N/A (stateless embedding operations) (008-for-the-embeddings)
- Go 1.21+ (Beluga AI Framework standard) + OpenTelemetry, go-playground/validator, testify (008-for-the-embeddings)
- N/A (embeddings service - no persistent storage) (008-for-the-embeddings)

## Project Structure
```
src/
tests/
```

## Commands
# Add commands for Go 1.21+

## Code Style
Go 1.21+: Follow standard conventions

## Recent Changes
- 008-for-the-embeddings: Added Go 1.21+ (Beluga AI Framework standard) + OpenTelemetry, go-playground/validator, testify
- 008-for-the-embeddings: Added Go 1.21+ + go.opentelemetry.io/otel, github.com/go-playground/validator/v10, github.com/sashabaranov/go-openai, github.com/ollama/ollama/api
- 006-for-the-config: Added Go 1.21+ (existing Beluga AI Framework requirement) + Viper (spf13/viper), OpenTelemetry (go.opentelemetry.io/otel), testify (github.com/stretchr/testify), validator (go-playground/validator), schema package integration

<!-- MANUAL ADDITIONS START -->
<!-- MANUAL ADDITIONS END -->
